apiVersion: v1
kind: Template
message: |-
  The following service(s) have been created in your project: ${SERVICE_NAME}.
metadata:
  annotations:
    description: |-
      MemSQL 6.0, with persistent storage.
    iconClass: icon-memsql
    openshift.io/display-name: MemSQL
    tags: database,memsql
    template.openshift.io/provider-display-name: AbarCloud
  name: memsql

objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: ${SERVICE_NAME}
      deploymentconfig: ${SERVICE_NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${SERVICE_NAME}
          deploymentconfig: ${SERVICE_NAME}
      spec:
        containers:
          - image: "docker-registry.default.svc:5000/stis-sub/memsql:6.0.14"
            imagePullPolicy: IfNotPresent
            name: memsql
            ports:
            - containerPort: 3306
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
            readinessProbe:
              tcpSocket:
                port: 9000
              initialDelaySeconds: 30
              timeoutSeconds: 1
            livenessProbe:
              tcpSocket:
                port: 9000
              initialDelaySeconds: 300
              timeoutSeconds: 10
            env:
            - name: MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: '0'
                  resource: limits.memory
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - name: ${SERVICE_NAME}-data
              mountPath: /data
        volumes:
        - name: "${SERVICE_NAME}-data"
          persistentVolumeClaim:
            claimName: "${SERVICE_NAME}"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: "${SERVICE_NAME}"
    name: "${SERVICE_NAME}"
  spec:
    ports:
    - name: web-9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    - name: db-3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: "${SERVICE_NAME}"
      deploymentconfig: "${SERVICE_NAME}"
    sessionAffinity: None
    type: ClusterIP

parameters:
- name: SERVICE_NAME
  displayName: Service Name
  description: The name used when creating the required deployment config,
    service etc. Must be unique and contain only lower-case letters.
  value: memsql
  required: true
- displayName: Memory Limit
  description: Maximum amount of memory the container can use, e.g. 1000Mi, 3000Mi. This
    can be modified later in the DeploymentConfig.
  name: MEMORY_LIMIT
  required: true
  value: 2000Mi
- name: VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 1Gi, 5Gi.
  value: 1Gi
  required: true
